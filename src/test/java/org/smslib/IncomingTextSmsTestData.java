/**
 * 
 */
package org.smslib;

import org.smslib.util.HexUtils;

/**
 * Data for testing decoding of an incoming text SMS.
 * @author Alex
 */
public class IncomingTextSmsTestData extends IncomingSmsTestData {
//> STATIC CONSTANTS
	/** Test GSM7bit messages of more than one part. */
	public static final IncomingTextSmsTestData[] MULTIPART_GSM7BIT_MESSAGES = {
		new IncomingTextSmsTestData("Jumpstyle is a dance and music genre mainly practiced in Europe, specifically the Netherlands, Belgium, Germany, Poland, the Czech Republic, and northern France. The dance is also called Jumpen (English word Jump + the Dutch suffix -en, meaning \"to jump\" or \"jumping\").  umpstyle also refers to a style of music to which Jumpstyle can be performed.",
				"0791449737709399440C91447749318438000090807241344440A00500036B030195F5367C4ECFB3CBA0F41C140691C3EE711914769341EDFA3C3D069DCB6E7919D40EA7DDEC3C082E0F8FE9E971990C4ABB41C5BAFC0D2FB3407378799C36A7C761363B0FA2A3CB2067998E2ECBD9613779CE0209CBEC73BADE66818E65793BECCEB340D0373BEC26B34074741934D497C76890B40CAF8BD9E9310B14769341EEB79C8E2ECBDD",
				"0791449737709399440C91447749318438000090807241441040A00500036B0302414679D83D2EBB40547419440EBBC765507A0E0AB3E76FD038CC6697C92065BD0D2FBB41A8A2FBCC4ECFD1A0FB5B4E0629EB6D386805A2A3CB20629D3E4683E675B3398D07B5CA6E16A85D0EBBD3EE3348447F83D4F5365C047ACB412275BD0D4FBBCFA2940B04AAB7E1737A9E5D0685D9F337485E3697E57310FD0D0A83E6F43CBB0C7A9B41",
				"0791449737709399440C91447749318438000090807241442240310500036B0303DBF5797A0CA2BF4177747A8C0629EB6DF89C9E679741E3B01B242E83E065B9F92D6F97C92E"),
		new IncomingTextSmsTestData("Here is a very very very very very very very very very very very very very very very very very very long message which actually spans two other messages apart from the original one!",
				"0791449737019037640C91447749318438000090201171853100A0060804B9DB0201C8B2BC0C4ACF416190BD2CCF83EC65791E642FCBF3207B599E07D9CBF23CC85E96E741F6B23C0FB297E57990BD2CCF83EC65791E642FCBF3207B599E07D9CBF23CC85E96E741F6B23C0FB297E57990BD2CCF83EC65791EC47EBBCFA076793E0F9FCBA03B3A3D4683C2637A3DCC66E7417378D83D07D1EF6FD09B8E2ECB41EDF27C1E3E97E7",
				"0791449737019037640C9144774931843800009020117185630025060804B9DB0202A0303C2CA783CCF2771B444797416F79FA9C7687D9A0B7BB1C02"),
		new IncomingTextSmsTestData("Subscription keywords on 352: ARTMMS,CUTE,FUNCARD,FUNQUIZ,HONEY,KANO,KANA,KAPATID,KAPATIDMMS,KARATEMMS,KARATETXT,LOVE,MYGUY,MYGIRL,REFLECTMMS,REFLECTXT,SAFARI,STYLE,SWEETBOY,SWEETGIRL,SYOTABOY,SYOTAGIRL,TOUR,TRIVIA,WAIS. Other keywords: ADMUINFO, CARD, FX. Txt <keyword> HELP for help on a keyword. Txt <keyword> OFF to unsubscribe. Ex: WAIS HELP",
				"079136190800104244038153F20011804042417280239B050003E60301A675F17C2C4FC3E9E9B71BB42EE7EF6F39790E7ABB41B39A4C070A4AA9CDE69435AC528B2C63D5390C4A892C63D519AD26B52CE4D359CCB29641E793B50C3A83AC65101AA42689AC65101AA42689CDE694B50C4A83D462B339652D83D220B548C55259CCA7B5C86A668FD52CAB993D26A54C96B468641687D46673CA92168DCCE210",
				"079136190800104244038153F20011804042417290239B050003E60302A8582A6B1A3406A549D6949A651659D36BB148153EB3ACE9B558A41E9352266B9A7D5283C2679635CD3EA9C16352CA64519F55298B2A4D5A9341D635989CBA404F3ABA2C07ADCBF9FB5B4E9EEB404162B39A741A9F2CD0302825B24046AC0B44C5D341BC75397F7FCBC93E10B2C88482CC6F39085D66C3416F37280C5A97F3F7B71C",
				"079136190800104244038153F200118040424172012339050003E60303C82E10154F07F1D6E5FCFD2D27FB404FA311447F83EAEE795D3C1FCBD3E2B20B54C4EB40D760720A42169950"),
	};
	/** Test GSM7bit messages.  These messages all have a single PDU. */
	public static final IncomingTextSmsTestData[] GSM7BIT_MESSAGES = {
		new IncomingTextSmsTestData("Good for you. Slap on the back etc.", "0791447728008000040C9144978851560500009020113174630023C7F79B0C32BFE5A0FCBBEE024DD96138E8ED06D1D16590383C5E83CAF4B10B"),
		/* N.B. Originator = "from_Orange"; address length=20; type byte = 0xD0 */new IncomingTextSmsTestData("Hi from Orange. Take the hassle out of topping up. Call 450 to register your debit/credit card - then you can top-up anytime by text or by calling 450.", "07914497370190370414D066F9BB1D79CAC3EE731900009020114181110097C834C82C7FB7414F79D87D2EBB40D4F0BA0CA2A3CB2074783E679741EF3A1DF43683E86F383CED3E83EA7017681866B341B41A0C447F83E4E5737A4E2FCB41F9775D0E2297C569FA6B2C2F93D374D0382C27835A203ABAEC06E5DF75D038EC06D1DFF0561D0E0ABBF3F474BB0C12E741F4329E0E7ACB41E23C681C66B3D3EE33885683B900"),
		new IncomingTextSmsTestData("\rAAI+gSUAAAICAQMGAgEfQk3etwn8JQABAQABAQABAQcAAApObyBjb21tZW50", "0791447728008000040C914497885156050000902011515484003D8D6030B93A4FABC16030390C469BC7E0B9688EAE6765FADD8D534683C26034280C4683C260741C0C06E14F715EA816CB6274EDB50603"),
		new IncomingTextSmsTestData("There is a new form available for FrontlineSMS Forms: A very short form", "0791449737709399040C91447749318438000090201161305400475474595E06A5E7A030C85DBE83CC6F791B14B687D3ECB0985D0699DF729051FE76D3D9697779DA9C828C6F797BAE030541F6B23C0F9AA3DF723AC8FC96B701"),
		new IncomingTextSmsTestData("\rAAI+hyUAAAICAQMGAgEfZlZDBAmGJQ0CAAA=", "0791449737019037040C91447749318438000090201171033000258D6030B942E7ABC16030390C469BC7E0B968D6B2B54461B07D544661C36030D803"),
		new IncomingTextSmsTestData("\rAAI+hyUAAAECAQMlDQIAAA==", "0791449737019037040C91448773276057000090201171124200198D6030B942E7ABC160B0380C469B6C6234190C067B3D"),
		new IncomingTextSmsTestData("Here is a very very very very very very very very very very very very very very very very very very long message which actually spans two other messages", "0791449737019037640C91447749318438000090201171853100A0060804B9DB0201C8B2BC0C4ACF416190BD2CCF83EC65791E642FCBF3207B599E07D9CBF23CC85E96E741F6B23C0FB297E57990BD2CCF83EC65791E642FCBF3207B599E07D9CBF23CC85E96E741F6B23C0FB297E57990BD2CCF83EC65791EC47EBBCFA076793E0F9FCBA03B3A3D4683C2637A3DCC66E7417378D83D07D1EF6FD09B8E2ECB41EDF27C1E3E97E7"),
		new IncomingTextSmsTestData(" apart from the original one!", "0791449737019037640C9144774931843800009020117185630025060804B9DB0202A0303C2CA783CCF2771B444797416F79FA9C7687D9A0B7BB1C02"),
		new IncomingTextSmsTestData("Double message. Antale messaga doubled messaga antale antale toil and snucker old aguls ml6thl folto mlmtn mytwuzuwuzuwuzuwuzuwuzuwuzuwuzuwuzuwuzuwuzuwuz", "0791449737709499440C91448773276057000080708031005340A005000347020189EFBA985D06B5CBF379F85C7681826E7A985D06B5CBF379F81C0691DF7531BB4C06B5CBF379F81C0685DDF430BB0C0ABBE9617619447FA7D9A0B09B0C9ABBEBE375590E7AB3C9A0F0B9CE9E83DA6C1B1DCD0699DF6CFA1BD466B7E96E503B4FBFD7F5F57B5D5FBFD7F5F57B5D5FBFD7F5F57B5D5FBFD7F5F57B5D5FBFD7F5F57B5D5FBFD7F5"),
		new IncomingTextSmsTestData("2 HELLOHELLO", "0791361907002004440C913609363107320000805031117053231406050415B3FDE83210B2C8643E914526F309"),
		new IncomingTextSmsTestData("You have 1 missed call(s) from +911146558419 .Last call: 08-02-2010 09:21 .For New Year Rashifal, Dial 543214 (free)", "0791198901508113040C9119116455489100000120809012322274D9771D840EDBCBA018A89D9ECFCB64D038CC66A3E6299059FE6E8356B9582C46B3D56A385A2C077231C3733A681C66B3752018AE0593B564B0180C04CBE9643190CBF896839CE53B285B0ECB41D2F01C9D3687D92C10311D66836AB4992C4603A1CCF2723905"),
		new IncomingTextSmsTestData("\rAAI+gCUAAAICAQEGAj6ZG6dEAiviJQ0CAAA=", "0791198901508192040C91197971967081000001205031906122258D6030B93A0FABC16030390C468BC7A0DAA63DDAC8C560DA9E564661C36030D803"),
		new IncomingTextSmsTestData("This is a message that contains utf8 chars.Here are the chars:\u0131\u011F\u015F\u00FC\u00F6", "0791093592100000640C910905566361400000012091327233804B03240101A0A2D373507A0E0A83DAE5F93C7C2E83E8E8301D347EBBE9E1B47B0EAAD3CD38D0181D96CF5DC8B2BC0C0ACBCB203ABA0C1AA3C3F2B96E93DE9C37733F1F"), // This message uses the Turkish Single Shift table
		new IncomingTextSmsTestData("Good morning", "0891534875001040F30414D0537AD91C7683A465B71E0000013020017560400CC7F79B0C6ABFE5EEB4FB0C"),
		new IncomingTextSmsTestData("Good morning to you. Everything ok?", "0891534875001040F30414D0537AD91C7683A465B71E00000130304141024023C7F79B0C6ABFE5EEB4FB0CA2BF41F977DD052ADACBF23C1D9D769F41EFF50F"),
		new IncomingTextSmsTestData("Good morning to you. Everything ok? Oh, that' great\\!", "0891534875001040F30414D0537AD91C7683A465B71E00000130304172944036C7F79B0C6ABFE5EEB4FB0CA2BF41F977DD052ADACBF23C1D9D769F41EFF50FF444B3407474987E029DE5E5307DF30A01"),
		new IncomingTextSmsTestData("s applicant number. Thanks. Shantini", "06915669917777640A9156691639180000012022014281232B0500032A0303E6A0301CCE4E8FC36E3AC85D6F8BCB7217888A0EBBD77317688A0EBBE969771A"),
	};
	/** Test UCS2 Messages of more than one part. TODO USE THIS */
	public static final IncomingTextSmsTestData[] MULTIPART_UCS2_MESSAGES = {
	};
	/** Test UCS2 Messages.  These messages all have a single PDU. */
	public static final IncomingTextSmsTestData[] UCS2_MESSAGES = {
		/*
		 * When compiling, Maven seems to ignore the character encoding which it is told to use. For this reason,
		 * the data in org.smslib.IncomingTextSmsTestData.MULTIPART_UCS2_MESSAGES must have all unsafe character
		 * re-encoded using the java unicode escape format \\uBLAHBLAH.
		 */
		new IncomingTextSmsTestData("\u0420\u044D\u0441\u0441\u049B\u0456", "0791449737709399040C914477493184380008902050710511000C0420044D04410441049B0456"),
		new IncomingTextSmsTestData("\u0424\u0444\u0442\u0435\u0444\u0442\u043F\u0449\u0435\u0446\u044B\u0432\u043B\u0434", "0791447728008000040C914497885156050008902001412023001C042404440442043504440442043F044904350446044B0432043B0434"),
		new IncomingTextSmsTestData("\u0420\u044D\u0441\u0441\u049B\u0456\n\u0627\u0628\u062A\u062C\u062E\u062F\u0631\u0633\n\u0053\u0065\u006E\u0074\u0020\u0066\u0072\u006F\u006D\u0020\u0046\u0072\u006F\u006E\u0074\u006C\u0069\u006E\u0065\u0053\u004D\u0053\u0020\u003B\u002D\u0029", "0791449737709399040C91447749318438000890205071858300540420044D04410441049B0456000A06270628062A062C062E062F06310633000A00530065006E0074002000660072006F006D002000460072006F006E0074006C0069006E00650053004D00530020003B002D0029"),
		new IncomingTextSmsTestData("\u0420\u0443\u0434\u0434\u045E\u0020\u044C\u043D\u0020\u0430\u043A\u0448\u0443\u0442\u0432\u0021\u0020\u0054\u0068\u0061\u0074\u0027\u0073\u0020\u0076\u0065\u0072\u0079\u0020\u0065\u0078\u0063\u0069\u0074\u0069\u006E\u0067\u002C\u0020\u006C\u0065\u0074\u0027\u0073\u0020\u006D\u0061\u006B\u0065\u0020\u0074\u0068\u0069\u0073\u0020\u006D\u0065\u0073\u0073\u0061\u0067\u0065\u0020\u006D\u0075\u006C\u0074", "0791447728008000440C914497885156050008902021217274008C0500030E02010420044304340434045E0020044C043D00200430043A044804430442043200210020005400680061007400270073002000760065007200790020006500780063006900740069006E0067002C0020006C00650074002700730020006D0061006B0065002000740068006900730020006D0065007300730061006700650020006D0075006C0074"),
		new IncomingTextSmsTestData("i part and concatenated by writing lots.", "0791447728008000440C91449788515605000890202121728400560500030E020200690020007000610072007400200061006E006400200063006F006E0063006100740065006E0061007400650064002000620079002000770072006900740069006E00670020006C006F00740073002E"),
	};
	
	public static void main(String[] args) {
		for(IncomingTextSmsTestData std : UCS2_MESSAGES) {
			StringBuilder bob = new StringBuilder();
			for(char c : std.getMessageText().toCharArray()) {
				bob.append("\\u");
				bob.append(HexUtils.encode(c, 4));
			}
			System.out.println(std.getMessageText() + "\n->" + bob.toString());
		}
	}

//> INSTANCE PROPERTIES
	/** The text of the decoded message. */
	private final String messageText;

//> CONSTRUCTORS
	/**
	 * Create a new instance of this class.
	 * @param messageText
	 * @param messagePdus
	 */
	IncomingTextSmsTestData(String messageText, String... messagePdus) {
		super(messagePdus);
		this.messageText = messageText;
	}

//> ACCESSORS	
	/** @return the constructed content of the message */
	public String getMessageText() {
		return messageText;
	}

//> INSTANCE HELPER METHODS

//> STATIC FACTORIES

//> STATIC HELPER METHODS
}
